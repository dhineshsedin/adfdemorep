{
	"name": "srctostgpipeline",
	"properties": {
		"activities": [
			{
				"name": "controltable",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from ods.controldetail where dataflowflag = 'SRCtoStg'  and isapplicable = 1 and isreadyforexecution = 1 ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_controltable",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "controltable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('controltable').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "preprocess",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('DECLARE @batchid int;',\n'EXEC ods.usp_etlpreprocess ',item().sourceid,',',item().targetobject,',',item().dataflowflag,',','@batchid OUTPUT;',\n'SELECT @batchid AS batchid')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_dwh",
									"type": "DatasetReference",
									"parameters": {
										"targetschemaname": "NULL",
										"targetobject": {
											"value": "NULL",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "preprocess",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": true,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_source_advworks",
									"type": "DatasetReference",
									"parameters": {
										"sourceschema": {
											"value": "@item().sourceschema",
											"type": "Expression"
										},
										"sourceobject": {
											"value": "@item().sourceobject",
											"type": "Expression"
										},
										"sourcequery": {
											"value": "@item().sourcequery",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_dwh",
									"type": "DatasetReference",
									"parameters": {
										"targetschemaname": {
											"value": "@item().targetschemaname",
											"type": "Expression"
										},
										"targetobject": {
											"value": "@item().targetobject",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "exception process",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ods].[usp_etlerrorinsert]",
								"storedProcedureParameters": {
									"p_batchid": {
										"value": {
											"value": "@activity('PreProcess').output.firstRow.batchid",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"p_dataflowflag": {
										"value": {
											"value": "@item().dataflowflag",
											"type": "Expression"
										},
										"type": "String"
									},
									"p_errordesc": {
										"value": {
											"value": "@activity('copy data1').output.errors[0].Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"p_errorid": {
										"value": {
											"value": "@activity('copy data1').output.errors[0].Code",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"p_errorline": {
										"value": null,
										"type": "Int32"
									},
									"p_packagename": {
										"value": {
											"value": "@item().targetprocedurename",
											"type": "Expression"
										},
										"type": "String"
									},
									"p_sourceid": {
										"value": {
											"value": "@item().sourceid",
											"type": "Expression"
										},
										"type": "String"
									},
									"p_targetobject": {
										"value": {
											"value": "@item().targetobject",
											"type": "Expression"
										},
										"type": "String"
									},
									"p_taskname": {
										"value": {
											"value": "@item().jobname",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlazure_demo",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "post process success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ods].[usp_etlpostprocess]",
								"storedProcedureParameters": {
									"pbatchid": {
										"value": {
											"value": "@activity('PreProcess').output.firstRow.batchid",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pdataflowflag": {
										"value": {
											"value": "@item().dataflowflag",
											"type": "Expression"
										},
										"type": "String"
									},
									"pinsertcount": {
										"value": {
											"value": "@activity('copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"psourcecount": {
										"value": {
											"value": "@activity('copy data1').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"psourceid": {
										"value": {
											"value": "@item().sourceid",
											"type": "Expression"
										},
										"type": "String"
									},
									"ptargetobject": {
										"value": {
											"value": "@item().targetobject",
											"type": "Expression"
										},
										"type": "String"
									},
									"pupdatecount": {
										"value": null,
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlazure_demo",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "post process failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "exception process",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ods].[usp_etlpostprocess]",
								"storedProcedureParameters": {
									"pbatchid": {
										"value": {
											"value": "@activity('PreProcess').output.firstRow.batchid",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pdataflowflag": {
										"value": {
											"value": "@item().dataflowflag",
											"type": "Expression"
										},
										"type": "String"
									},
									"pinsertcount": {
										"value": {
											"value": "@activity('copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"psourcecount": {
										"value": {
											"value": "@activity('copy data1').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"psourceid": {
										"value": {
											"value": "@item().sourceid",
											"type": "Expression"
										},
										"type": "String"
									},
									"ptargetobject": {
										"value": {
											"value": "@item().targetobject",
											"type": "Expression"
										},
										"type": "String"
									},
									"pupdatecount": {
										"value": null,
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqlazure_demo",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Execute Pipeline2",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitOnCompletion": true
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [],
				"userProperties": []
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-12-18T16:04:28Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}