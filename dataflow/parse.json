{
	"name": "parse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_sqlazure_demo",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_sqlazure_demo",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "parseskills"
				},
				{
					"name": "parseaddress"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          empname as string,",
				"          skills as string,",
				"          address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'employees',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
				"source1 parse({parsed skills} = skills ? (skill1 as string,",
				"          skill2 as string,",
				"          skill3 as string),",
				"     format: 'delimited',",
				"     columnNamesAsHeader: false,",
				"     columnDelimiter: '|',",
				"     nullValue: '') ~> parseskills",
				"parseskills parse({address parse} = address ? (city as string,",
				"          country as string),",
				"     format: 'json',",
				"     documentForm: 'singleDocument') ~> parseaddress",
				"parseaddress sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dwh',",
				"     tableName: 'employees',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empid,",
				"          empname,",
				"          skill1 = {parsed skills}.skill1,",
				"          skill2 = {parsed skills}.skill2,",
				"          skill3 = {parsed skills}.skill3,",
				"          city = {address parse}.city,",
				"          country = {address parse}.country",
				"     )) ~> sink1"
			]
		}
	}
}